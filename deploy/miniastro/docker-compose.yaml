version: "3.8"

services:
# https://docs.gitea.io/en-us/config-cheat-sheet/
  gitea:
    networks:
      - net0
    image: gitea/gitea:1.16.5
    # image: nginx
    environment:
      TZ: Asia/Shanghai
      USER: git
      USER_UID: 1000
      USER_GID: 1000
      GITEA__server__DOMAIN: ${GIT_DOMAIN}
      GITEA__server__SSH_DOMAIN: ${GIT_DOMAIN}
      GITEA__server__ROOT_URL: http://${GIT_DOMAIN}:${GIT_PORT_HTTP}/
      GITEA__mirror__DEFAULT_INTERVAL: 10m
      GITEA__mirror__MIN_INTERVAL: 1m
      GITEA__webhook__ALLOWED_HOST_LIST: "*"
      # GITEA__database__DB_TYPE: mysql
      # GITEA__database__HOST: ${DB_URL}
      # GITEA__database__NAME: gitea
      # GITEA__database__USER: ${DB_USER_NAME}
      # GITEA__database__PASSWD: ${DB_USER_PASSWORD}
    volumes:
      - ${VOLUMES}/gitea:/data
    ports:
      - ${HOST}:${GIT_PORT_HTTP}:3000
    deploy:
      mode: replicated
      replicas: 1

#### drone ####
  drone:
    networks:
      - net0
    image: drone/drone:2
    ports:
      - "${HOST}:${DRONE_PORT_HTTP}:80"
      # - "${HOST}:4443:443"
    volumes:
      - ${VOLUMES}/drone:/data
    environment:
      - TZ=Asia/Shanghai
      - DRONE_GITEA_CLIENT_ID=${GIT_CLIENT_ID}
      - DRONE_GITEA_CLIENT_SECRET=${GIT_CLIENT_SECRET}
      - DRONE_GITEA_SERVER=http://${GIT_DOMAIN}:${GIT_PORT_HTTP}/ #浏览器oauth地址
      - DRONE_RPC_SECRET=fb625a1f8d208af16c10292d061c378c #RPC秘钥
      - DRONE_SERVER_PROTO=http #这个配置决定了你激活时仓库中的webhook地址的proto
      - DRONE_SERVER_HOST=${DRONE_DOMAIN}:${DRONE_PORT_HTTP} #浏览器oauth callback
      - DRONE_USER_CREATE=username:liye,admin:true
    deploy:
      mode: replicated
      replicas: 1
#### runner ####
  drone-runner-docker:
    networks:
      - net0
    image: drone/drone-runner-docker:1.8.2
    ports:
      - "${HOST}:${DRONE_RUNNER_DOCKER_PORT}:3000"
    depends_on:
      - drone
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:rw
      - ${VOLUMES}/drone-runner-docker:/data
    environment:
      - TZ=Asia/Shanghai
      - DRONE_RPC_PROTO=http
      - DRONE_RPC_HOST=${DRONE_DOMAIN}:${DRONE_PORT_HTTP}
      - DRONE_RPC_SECRET=fb625a1f8d208af16c10292d061c378c
      - DRONE_RUNNER_CAPACITY=1
      - DRONE_RUNNER_NAME=runner-0
      # - DRONE_RUNNER_LABELS=machine1:runner1
      - DRONE_LOGS_TRACE=true
      - DRONE_RPC_DUMP_HTTP=true
      - DRONE_RPC_DUMP_HTTP_BODY=true
      - DRONE_UI_USERNAME=root
      - DRONE_UI_PASSWORD=root
      - DRONE_RUNNER_ENVIRON=HOST:${HOST}
      - DRONE_RUNNER_VOLUMES=${VOLUMES}/drone-runner-docker:/data
    deploy:
      mode: replicated
      replicas: 1
#### portainer ####
  portainer:
    networks:
      - net0
    image: portainer/portainer-ce:latest
    ports:
      - "${HOST}:${PORTAINER_PORT_HTTP}:9000"
      # - "${HOST}:9443:9443"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:rw
      - ${VOLUMES}/portainer:/data
    environment:
      - TZ=Asia/Shanghai
    deploy:
      mode: replicated
      replicas: 1

### zk ####
  zk:
    networks:
      - net0
    image: zookeeper
    ports:
      - "${HOST}:${ZK_PORT}:2181"
    volumes:
      - ${VOLUMES}/zk:/data
    environment:
      - TZ=Asia/Shanghai
      - ZOO_LOG4J_PROP=INFO,ROLLINGFILE

networks:
  net0:
    name: miniastro_net0
    driver: bridge
